# -*- coding: utf-8 -*-
"""treeDetection_old.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19HNf28yUlvBrtCPXGdcqXIB6PoL6TKY2
"""

!pip install ultralytics

from google.colab import drive
drive.mount('/content/drive')

from ultralytics import YOLO
import os
import shutil
from sklearn.model_selection import train_test_split
import random

import os
from random import choice

#arrays to store file names
imgs =[]
xmls =[]

#setup dir names
trainPath =('/content/drive/MyDrive/dataset/images/train')
valPath = ('/content/drive/MyDrive/dataset/images/val')
crsPath = ('/content/drive/MyDrive/plantation') #dir where images and annotations stored

#setup ratio (val ratio = rest of the files in origin dir after splitting into train and test)
train_ratio = 0.8
val_ratio = 0.2


#total count of imgs
totalImgCount = len(os.listdir(crsPath))/2

#soring files to corresponding arrays
for (dirname, dirs, files) in os.walk(crsPath):
    for filename in files:
        if filename.endswith('.txt'):
            xmls.append(filename)
        else:
            imgs.append(filename)
#print(imgs)
#print(xmls)


#counting range for cycles
countForTrain = int(len(imgs)*train_ratio)
countForVal = int(len(imgs)*val_ratio)
print("Total number of images: ", len(imgs))
print("training images: ",countForTrain)
print("Validation images: ",countForVal)

import shutil, sys
trainimagePath = ('/content/drive/MyDrive/dataset/images/train')
trainlabelPath = ('/content/drive/MyDrive/dataset/labels/train')
valimagePath = ('/content/drive/MyDrive/dataset/images/val')
vallabelPath = ('/content/drive/MyDrive/dataset/labels/val')
#cycle for train dir
for x in range(countForTrain):

    fileJpg = choice(imgs) # get name of random image from origin dir
    fileXml = fileJpg[:-4] +'.txt' # get name of corresponding annotation file

    #move both files into train dir
    #shutil.move(os.path.join(crsPath, fileJpg), os.path.join(trainimagePath, fileJpg))
    #shutil.move(os.path.join(crsPath, fileXml), os.path.join(trainlabelPath, fileXml))
    shutil.copy(os.path.join(crsPath, fileJpg), os.path.join(trainimagePath, fileJpg))
    shutil.copy(os.path.join(crsPath, fileXml), os.path.join(trainlabelPath, fileXml))


    #remove files from arrays
    imgs.remove(fileJpg)
    xmls.remove(fileXml)



#cycle for test dir
for x in range(countForVal):

    fileJpg = choice(imgs) # get name of random image from origin dir
    fileXml = fileJpg[:-4] +'.txt' # get name of corresponding annotation file

    #move both files into train dir
    #shutil.move(os.path.join(crsPath, fileJpg), os.path.join(valimagePath, fileJpg))
    #shutil.move(os.path.join(crsPath, fileXml), os.path.join(vallabelPath, fileXml))
    shutil.copy(os.path.join(crsPath, fileJpg), os.path.join(valimagePath, fileJpg))
    shutil.copy(os.path.join(crsPath, fileXml), os.path.join(vallabelPath, fileXml))

    #remove files from arrays
    imgs.remove(fileJpg)
    xmls.remove(fileXml)

#rest of files will be validation files, so rename origin dir to val dir
#os.rename(crsPath, valPath)
#shutil.move(crsPath, valPath)

# Define the model
model = YOLO("yolov8n.pt")

# Use the model
model.train(data='/content/drive/MyDrive/data250.yaml', epochs=5)

from IPython.display import Image
Image(filename='/content/runs/detect/train/train_batch0.jpg', width=600)

Image(filename='/content/runs/detect/train/val_batch0_labels.jpg', width=700)
model.val(save_json=True)
